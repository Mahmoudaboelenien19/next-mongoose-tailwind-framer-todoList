"use client";
import { HiAtSymbol, HiFingerPrint } from "react-icons/hi";
import { signIn, useSession } from "next-auth/react";
import { useRouter, useSearchParams } from "next/navigation";
import Link from "next/link";
import { useForm, FormProvider, FieldValues } from "react-hook-form";
import { yupResolver } from "@hookform/resolvers/yup";
import { sungInSchema } from "@/lib/yup/signinSchema";
import GoogleLoginButton from "./components/GoogleButton";
import HomeLink from "../(site)/components/(shared)/widgets/HomeLink";
import Input from "../(site)/components/(shared)/widgets/Input";
import MainBtn from "../(site)/components/(shared)/MainBtn";
import { toast } from "sonner";
import { Metadata } from "next";
// export const metadata: Metadata = {
//   title: "Todo",
//   description: "Generated by create next app",
// };

const Page = () => {
  // not to open signin page if user authenticated
  const { data: session } = useSession();
  const router = useRouter();
  // if (session) {
  //   router.push("/");
  // }
  const search = useSearchParams();
  const callbackUrl = search.get("callbackUrl") || "/";
  const email = search.get("email") || "";

  const methods = useForm({ resolver: yupResolver(sungInSchema) });
  const {
    handleSubmit,
    formState: { isSubmitting },
  } = methods;

  const Authenticate = async (data: FieldValues) => {
    const res = await signIn("credentials", {
      redirect: false,
      email: data.email,
      password: data.password,
      callbackUrl,
    });

    if (res?.error === "CredentialsSignin") {
      toast.error("email or password is wrong");
    }

    if (res?.error === "data and hash arguments required") {
      return toast.error("you haven't set a pssword for this email ");
    }
    if (res?.url) {
      router.replace(res.url);
      router.refresh();
    }
  };

  const onSubmit = async (data: FieldValues) => {
    await Authenticate(data);
  };

  return (
    <FormProvider {...methods}>
      <form
        autoComplete="off"
        noValidate
        className=" relative rounded bg-todo w-[95%] max-w-[400px]  p-8  flex flex-col gap-8 justify-between"
        onSubmit={handleSubmit(onSubmit)}
      >
        <HomeLink />
        <span className="text-center text-white/40 ">
          <h1 className="text-white text-center text-[min(5vw,35px)]">
            Explore
          </h1>
          <p className="[text-wrap:balance] text-sm  mx-auto p-2">
            Welcome back! Please enter your email and password below to access
            your account.
          </p>
        </span>

        <Input
          Icon={HiAtSymbol}
          placeholder="Email"
          type="email"
          name="email"
          defaultValue={email}
        />
        <Input
          Icon={HiFingerPrint}
          placeholder="Password"
          type="password"
          name="password"
        />

        <MainBtn
          btn="Sign in"
          type="submit"
          className="  h-11 border bg-body  border-body w-full  rounded"
          loading={isSubmitting}
        />

        <GoogleLoginButton />
        <div className="text-center text-white/40  -mt-4">
          don &apos;t have an account ?{" "}
          <Link
            href={"/signup"}
            className="text-mainRed hover:opacity-90 transition"
          >
            Sign up
          </Link>
        </div>
      </form>
    </FormProvider>
  );
};

export default Page;
